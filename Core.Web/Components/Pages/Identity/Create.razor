@page "/identity/create"
@rendermode InteractiveServer

@using Core.Web.Client.Clients
@using Request =  Core.Web.Models.Identity.Requests.Create

@inject IMessageService _messageService;
@inject IIdentityClient _client;


<Div Position="Position.Relative">
    <Div>
           <Heading Size="HeadingSize.Is1" TextAlignment="TextAlignment.Center">Create an Identity</Heading>
    </Div>
    <Row>
        <Column ColumnSize="ColumnSize.Is4">
            <Field>
                <FieldLabel>Username</FieldLabel>
                <FieldBody>
                    <TextEdit Placeholder="Username" @bind-Text="@_request.Username"></TextEdit>
                </FieldBody>
            </Field>
        </Column>
        <Column ColumnSize="ColumnSize.Is8">
            <Field>
                <FieldLabel>Password</FieldLabel>
                <FieldBody>
                    <TextEdit Role="TextRole.Password" Placeholder="Super Secret Password" @bind-Text="@_request.Password"></TextEdit>
                </FieldBody>
            </Field>
        </Column>
    </Row>
    <Row>
        <Column ColumnSize="ColumnSize.Is8">
            <Field>
                <FieldLabel>Email</FieldLabel>
                <FieldBody>
                    <TextEdit Role="TextRole.Email" Placeholder="Email" @bind-Text="@_request.Email"></TextEdit>
                </FieldBody>
            </Field>
        </Column>
        <Column ColumnSize="ColumnSize.Is4">
            <Field>
                <FieldLabel>Full name</FieldLabel>
                <FieldBody>
                    <TextEdit Placeholder="Full name" @bind-Text="@_request.FullName"></TextEdit>
                </FieldBody>
            </Field>
        </Column>
    </Row>

    <Button Color="Color.Primary" Clicked="@OnCreate" Loading="_loading">Create User</Button>
    <Button Color="Color.Primary" Clicked="@Show">Say hi!</Button></Div>


@code 
{
    bool _loading;
    Request _request = new();

    private Task Show()
    {
        return _messageService.Info( "This is a simple info message!", "Hello" );
    }

    private async Task OnCreate()
    {
        _loading = true;
        
        var dto = await _client.CreateIdentity(_request);
        _loading = false;

    }
}